{
  "type": "object",
  "properties": {
    "apiVersion": {
      "type": "string"
    },
    "kind": {
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "type": "object"
    }
  },
  "allOf": [
    {
      "if": {
        "properties": {
          "apiVersion": {
            "const": "redshift.aws.crossplane.io/v1alpha1"
          }
        }
      },
      "then": {
        "description": "A Cluster is a managed resource that represents an AWS Redshift cluster.",
        "properties": {
          "apiVersion": {
            "const": "redshift.aws.crossplane.io/v1alpha1",
            "type": "string"
          },
          "kind": {
            "const": "Cluster",
            "type": "string"
          },
          "spec": {
            "description": "ClusterSpec defines the desired state of an AWS Redshift Cluster.",
            "properties": {
              "forProvider": {
                "description": "ClusterParameters define the parameters available for an AWS Redshift cluster",
                "properties": {
                  "masterUsername": {
                    "description": "MasterUsername is the user name associated with the master user account for the cluster that is being created.",
                    "type": "string"
                  },
                  "nodeType": {
                    "description": "NodeType is the node type defining its size and compute capacity to be provisioned for the cluster.",
                    "type": "string"
                  },
                  "region": {
                    "description": "Region is the region you'd like the Cluster to be created in.",
                    "type": "string"
                  },
                  "dbName": {
                    "description": "DBName is the name of the first database to be created when the cluster is created.",
                    "type": "string"
                  },
                  "port": {
                    "description": "Port specifies the port number on which the cluster accepts incoming connections.",
                    "format": "int32",
                    "maximum": 65535,
                    "minimum": 1150,
                    "type": "integer"
                  },
                  "clusterType": {
                    "description": "ClusterType is the type of the cluster you want.",
                    "enum": [
                      "multi-node",
                      "single-node"
                    ],
                    "type": "string"
                  },
                  "numberOfNodes": {
                    "description": "NumberOfNodes defines the number of compute nodes in the cluster.",
                    "format": "int32",
                    "maximum": 100,
                    "minimum": 1,
                    "type": "integer"
                  },
                  "publiclyAccessible": {
                    "description": "PubliclyAccessible is to specify if the cluster can be accessed from a public network.",
                    "type": "boolean"
                  },
                  "encrypted": {
                    "description": "Encrypted defines whether your data in the cluster will be encrypted at rest or not.",
                    "type": "boolean"
                  },
                  "tags": {
                    "description": "Tags indicates a list of tags for the clusters.",
                    "items": {
                      "description": "Tag represent a key-pair metadata assigned to a Redshift Cluster",
                      "properties": {
                        "tag": {
                          "description": "The key of the tag.",
                          "type": "string"
                        },
                        "value": {
                          "description": "The value of the tag.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "tag",
                        "value"
                      ],
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "masterUsername",
                  "nodeType",
                  "region"
                ],
                "type": "object",
                "additionalProperties": true
              }
            },
            "required": [
              "forProvider"
            ],
            "type": "object",
            "additionalProperties": true
          }
        },
        "required": [
          "spec"
        ],
        "type": "object",
        "additionalProperties": true
      }
    },
    {
      "if": {
        "properties": {
          "apiVersion": {
            "const": "kafka.aws.crossplane.io/v1alpha1"
          }
        }
      },
      "then": {
        "description": "A Cluster is a managed resource that represents an AWS MSK cluster.",
        "properties": {
          "apiVersion": {
            "const": "kafka.aws.crossplane.io/v1alpha1",
            "type": "string"
          },
          "kind": {
            "const": "Cluster",
            "type": "string"
          },
          "spec": {
            "description": "ClusterSpec defines the desired state of an AWS MSK Cluster.",
            "properties": {
              "forProvider": {
                "description": "ClusterParameters define the parameters available for an AWS MSK cluster",
                "properties": {
                  "clusterName": {
                    "description": "The name of the cluster.",
                    "type": "string"
                  },
                  "kafkaVersion": {
                    "description": "The version of Apache Kafka.",
                    "type": "string"
                  },
                  "numberOfBrokerNodes": {
                    "description": "The number of broker nodes in the cluster.",
                    "format": "int64",
                    "type": "integer"
                  },
                  "region": {
                    "description": "Region is the region you'd like the Cluster to be created in.",
                    "type": "string"
                  },
                  "brokerNodeGroupInfo": {
                    "description": "Information about the broker nodes in the cluster.",
                    "properties": {
                      "clientSubnets": {
                        "description": "The list of subnets to connect to in the client VPC.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "clientSubnetRefs": {
                        "description": "ClientSubnetRefs are references to Subnets used to set the ClientSubnets.",
                        "items": {
                          "description": "A Reference to a named object.",
                          "properties": {
                            "name": {
                              "description": "Name of the referenced object.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "type": "object",
                          "additionalProperties": false
                        },
                        "type": "array"
                      },
                      "instanceType": {
                        "description": "The type of Amazon EC2 instances to use for Apache Kafka brokers.",
                        "type": "string"
                      },
                      "securityGroups": {
                        "description": "The AWS security groups to associate with the elastic network interfaces.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "securityGroupRefs": {
                        "description": "SecurityGroupRefs are references to SecurityGroups used to set the SecurityGroups.",
                        "items": {
                          "description": "A Reference to a named object.",
                          "properties": {
                            "name": {
                              "description": "Name of the referenced object.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "type": "object",
                          "additionalProperties": false
                        },
                        "type": "array"
                      },
                      "storageInfo": {
                        "description": "Contains information about storage volumes attached to MSK broker nodes.",
                        "properties": {
                          "ebsStorageInfo": {
                            "description": "EBS volume information.",
                            "properties": {
                              "volumeSize": {
                                "description": "The size in GiB of the EBS volume for the data drive on each broker node.",
                                "format": "int64",
                                "type": "integer"
                              }
                            },
                            "type": "object",
                            "additionalProperties": true
                          }
                        },
                        "type": "object",
                        "additionalProperties": true
                      }
                    },
                    "type": "object",
                    "additionalProperties": true
                  },
                  "clientAuthentication": {
                    "description": "Includes all client authentication related information.",
                    "properties": {
                      "sasl": {
                        "description": "Details for ClientAuthentication using SASL.",
                        "properties": {
                          "iam": {
                            "description": "Indicates whether IAM access control is enabled.",
                            "properties": {
                              "enabled": {
                                "description": "Indicates whether IAM access control is enabled.",
                                "type": "boolean"
                              }
                            },
                            "type": "object",
                            "additionalProperties": true
                          },
                          "scram": {
                            "description": "Details for SASL/SCRAM client authentication.",
                            "properties": {
                              "enabled": {
                                "description": "SASL/SCRAM authentication is enabled or not.",
                                "type": "boolean"
                              }
                            },
                            "type": "object",
                            "additionalProperties": true
                          }
                        },
                        "type": "object",
                        "additionalProperties": true
                      },
                      "tls": {
                        "description": "Details for ClientAuthentication using TLS.",
                        "properties": {
                          "enabled": {
                            "description": "Specifies whether TLS authentication is enabled or not.",
                            "type": "boolean"
                          }
                        },
                        "type": "object",
                        "additionalProperties": true
                      }
                    },
                    "type": "object",
                    "additionalProperties": true
                  },
                  "configurationInfo": {
                    "description": "Represents the configuration that you want MSK to use for the brokers in a cluster.",
                    "properties": {
                      "arn": {
                        "description": "ARN of the configuration to use.",
                        "type": "string"
                      },
                      "arnRef": {
                        "description": "Reference to a configuration to populate arn.",
                        "properties": {
                          "name": {
                            "description": "Name of the referenced object.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "name"
                        ],
                        "type": "object",
                        "additionalProperties": false
                      },
                      "revision": {
                        "description": "The revision of the configuration to use.",
                        "format": "int64",
                        "type": "integer"
                      }
                    },
                    "type": "object",
                    "additionalProperties": true
                  },
                  "encryptionInfo": {
                    "description": "Includes all encryption-related information.",
                    "properties": {
                      "encryptionInTransit": {
                        "description": "The details for encryption in transit.",
                        "properties": {
                          "clientBroker": {
                            "description": "Indicates the encryption setting for data in transit between clients and brokers.",
                            "type": "string"
                          },
                          "inCluster": {
                            "description": "When set to true, it indicates that data communication among the broker nodes of the cluster is encrypted.",
                            "type": "boolean"
                          }
                        },
                        "type": "object",
                        "additionalProperties": true
                      }
                    },
                    "type": "object",
                    "additionalProperties": true
                  },
                  "enhancedMonitoring": {
                    "description": "Specifies the level of monitoring for the MSK cluster.",
                    "type": "string"
                  },
                  "tags": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "A map of tags to assign to the resource.",
                    "type": "object"
                  }
                },
                "required": [
                  "brokerNodeGroupInfo",
                  "clusterName",
                  "kafkaVersion",
                  "numberOfBrokerNodes",
                  "region"
                ],
                "type": "object",
                "additionalProperties": true
              }
            },
            "required": [
              "forProvider"
            ],
            "type": "object",
            "additionalProperties": true
          }
        },
        "required": [
          "spec"
        ],
        "type": "object",
        "additionalProperties": true
      }
    }
  ]
}